How did viewing a diff between 2 versions of a file help you see the bug that was introduced?

By limiting the text to the lines that were changed, it allowed me to focus on those lines, and required me to do so.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It would reduce the time spent debugging, by having the differences in files easily found using diff.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, 
vs having versions automatically saved, like Google Docs does?

Manual control allows the user to decide the size and importance of the change, and to annotate the change.
Auto saves ensure that saves occur.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, 
while others, like Google Docs, treat each file separately?

Git is designed to work on a software project that will span multiple files.
Google Docs is designed to work on individual files.
Git was build with programming in mind.
Google Docs was built for anybody that might want to create a document.

How can you use the commands git log and git diff to view the history of files?

git log will show the entire commit history of a project.
git diff will show the specific changes made between each commit.

How might using version control make you more confident to make changes that could break something?

Version control and debugging tools make finding specific problems much easier, and allow me to go back 
easily to fix errors.

Now that you have your workspace set up, what do you want to try using Git for?

Programming


